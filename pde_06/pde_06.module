<?php

/**
 * @file
 * Contains example code demonstrating topics covered in Chapter 6.
 */

// // @ignore sniffer_squiz_commenting_poststatementcomment_found:file
// @ignore sniffer_commenting_inlinecomment_spacingafter:file
// // @ignore sniffer_commenting_inlinecomment_invalidendchar:file

module_load_include('inc', 'pde', 'includes/tools');

/**
 * Implements hook_menu().
 */
function pde_06_menu() {
  pde_trace_funct();

  $items = array();

  $items['fci'] = array(
    'title' => 'Field Collection',
    'page callback' => 'pde_06_pcb_fci_info',
    'access callback' => TRUE,
  );

  $items['fci/create'] = array(
    'title' => 'Create',
    'page callback' => 'pde_06_pcb_fci_create',
    'access callback' => TRUE,
    'weight' => 1,
  );

  $items['fci/attach'] = array(
    'title' => 'Attach',
    'page callback' => 'pde_06_pcb_fci_attach',
    'access callback' => TRUE,
    'weight' => 2,
  );

  $items['fci/save'] = array(
    'title' => 'Save',
    'page callback' => 'pde_06_pcb_fci_save',
    'access callback' => TRUE,
    'weight' => 3,
  );

  $items['fci/load'] = array(
    'title' => 'Load',
    'page callback' => 'pde_06_pcb_fci_load',
    'access callback' => TRUE,
    'weight' => 4,
  );

  return $items;
}


/**
 * Page callback: Show info page.
 */
function pde_06_pcb_fci_info() {
  pde_trace_funct();

  return t('Select Field Collection Item entity action from menu.');
}


/**
 * Page callback: Create.
 */
function pde_06_pcb_fci_create($op = 'en') {
  pde_trace_funct();

  $funct = '_pde_06_fci_create_' . $op;
  $funct();

  return t('Done');
}


/**
 * Page callback: Attach.
 */
function pde_06_pcb_fci_attach($op = 'en', $nid = 1) {
  pde_trace_funct();

  $funct = '_pde_06_fci_attach_' . $op;
  $funct($nid);

  return t('Done');
}


/**
 * Page callback: Save.
 */
function pde_06_pcb_fci_save() {
  pde_trace_funct();

  _pde_06_fci_save();

  return t('Done');
}


/**
 * Page callback: Load.
 */
function pde_06_pcb_fci_load($eid = 1) {
  pde_trace_funct();

  _pde_06_fci_load($eid);

  return t('Done');
}


/**
 * Command: create a field collection item entity.
 *
 * In order to create the entity, the field collection field shall be available
 * because it embeds the entity. Create the field_employee first (using UI).
 * The field is treated as a bundle of the field collection item entity. Add
 * also other fields to the field colletion item (using UI): field_surname,
 * field_salary.
 */
function _pde_06_fci_create_en() {
  $data = array(
    'field_name' => 'field_employee',
  );

  // Object of class FieldCollectionItemEntity.
  $entity = entity_create('field_collection_item', $data);

  // The attached fields are not visible in the newly created object if they
  // are empty.
  _pde_06_fci_wrapper_dump($entity);

  // The attached fields can be added to the entity object.
  dpm('FILLING FIELDS WITH DATA...');
  $entity->field_surname[LANGUAGE_NONE][0]['value'] = 'Lampley';
  $entity->field_salary[LANGUAGE_NONE][0]['value'] = 200;
  $entity->field_undefined[LANGUAGE_NONE][0]['value'] = 'Xfield not availableX';
  _pde_06_fci_wrapper_dump($entity);

  dpm('ENTITY 2');
  $field_surname[LANGUAGE_NONE][0]['value'] = 'Lampley';
  $field_salary[LANGUAGE_NONE][0]['value'] = 200;

  $data = array(
    'field_name' => 'field_employee',
    'field_surname' => $field_surname,
    'field_salary' => $field_salary,
  );

  $entity = entity_create('field_collection_item', $data);

  // The attached fields are visible as the entity object properties.
  _pde_06_fci_wrapper_dump($entity);
}


/**
 * Command: create a field collection item entity via wrapper.
 *
 * See _pde_06_fci_create_en().
 */
function _pde_06_fci_create_wr() {
  $data = array(
    'field_name' => 'field_employee',
  );

  // For the new created object, the attached fields are not available (as
  // empty properties of the object).
  $entity = entity_create('field_collection_item', $data);
  _pde_06_fci_wrapper_dump($entity);

  // The attached fields are not visible in the newly created object if they
  // are empty.

  // The attached fields can be filled via wrapper.
  dpm('FILLING FIELDS WITH DATA...');
  $wrapper = entity_metadata_wrapper('field_collection_item', $entity);
  $wrapper->field_surname = 'Smith';
  $wrapper->field_salary = 100;
  // Only attached fields are accessible.
  // $wrapper->field_undefined = 'Xfield not availableX';

  _pde_06_fci_wrapper_dump($entity);
}


/**
 * Command: attach a field collection item to a node.
 */
function _pde_06_fci_attach_en($nid) {
  $field_surname[LANGUAGE_NONE][0]['value'] = 'Lampley';
  $field_salary[LANGUAGE_NONE][0]['value'] = 200;

  $data = array(
    'field_name' => 'field_employee',
    'field_surname' => $field_surname,
    'field_salary' => $field_salary,
  );

  $employee = entity_create('field_collection_item', $data);

  // Use a node bundle (content type) that has not attached entity collection
  // field.
  $node = node_load($nid);
  dpm($node, 'node');
  _pde_06_fci_entity_dump($employee);

  dpm("ADDING FIELD COLLECTION TO NODE $nid...");
  $employee->setHostEntity('node', $node);
  // Now the node object has a reference to the field collection object (see
  // $create_link parameter of setHostEntity).
  dpm($node, 'node');
  _pde_06_fci_entity_dump($employee);
  _pde_06_fci_wrapper_dump($employee);
}


/**
 * Command: attach a field collection item to a node via wrapper.
 */
function _pde_06_fci_attach_wr($nid) {
  $data = array(
    'field_name' => 'field_employee',
  );

  $employee = entity_create('field_collection_item', $data);
  $e_wrapper = entity_metadata_wrapper('field_collection_item', $employee);

  $e_wrapper->field_surname = 'Brown';
  $e_wrapper->field_salary = '300';

  // Use a node bundle (content type) that has not attached entity collection
  // field.
  $n_wrapper = entity_metadata_wrapper('node', $nid);
  dpm($n_wrapper->value(), 'n_wrapper->value()');

  _pde_06_fci_entity_dump($employee);

  dpm("ADDING FIELD COLLECTION TO NODE $nid...");
  // Using wrapper it is not possible to add field collection item entity to
  // entity which has no field collection field attached. Compare to
  // _pde_06_fci_attach_en().
  $e_wrapper->host_entity = $n_wrapper;
  // Now the node object has a reference to the field collection object (see
  // $create_link parameter of setHostEntity).
  dpm($n_wrapper->value(), 'n_wrapper->value()');
  _pde_06_fci_entity_dump($employee);
}


/**
 * Command: save a field collection item.
 */
function _pde_06_fci_save() {
  pde_trace_funct();

  $nid = 4;

  $data = array(
    'field_name' => 'field_employee',
  );

  $employee = entity_create('field_collection_item', $data);
  $e_wrapper = entity_metadata_wrapper('field_collection_item', $employee);

  $e_wrapper->field_surname = 'Brown';
  $e_wrapper->field_salary = '300';

  $n_wrapper = entity_metadata_wrapper('node', $nid);
  $e_wrapper->host_entity = $n_wrapper;
  $e_wrapper->save();
}


/**
 * Command: load a field collection item.
 */
function _pde_06_fci_load($eid) {
  pde_trace_funct();

  // Load field collection item entity via its 'parent' entity.
  $n_wrapper = entity_metadata_wrapper('node', 4);
  dpm($n_wrapper->value(), 'n_wrapper->value()');
  $employee = $n_wrapper->field_employee;
  dpm($n_wrapper->field_employee->getPropertyInfo(),
      'n_wrapper->field_employee->getPropertyInfo()');
  dpm($n_wrapper->field_employee->field_surname->value(),
      '$n_wrapper->field_employee->field_surname->value()');
}


/**
 * Dump entity data using wrapper.
 */
function _pde_06_fci_wrapper_dump($data) {
  pde_trace_funct();

  $wrapper = entity_metadata_wrapper('field_collection_item', $data);

  dpm($data, 'data (entity/eid)');
  dpm($wrapper, 'wrapper');
  dpm(entity_get_property_info(), 'entity_get_property_info()');
  dpm($wrapper->getPropertyInfo(), 'wrapper->getPropertyInfo()');
  dpm($wrapper->field_surname->info(), 'wrapper->field_surname->info()');
  dpm($wrapper->field_salary->info(), 'wrapper->field_salary->info()');
  // dpm($wrapper->field_undefined->info(), 'wrapper->field_undefined->info()');

  // Although field_undefined is the property of the entity object, it can not
  // be accessed by $wrapper->field_undefined (it is not available in
  // property info).
  dpm($wrapper->value(), 'wrapper->value()');
  dpm($wrapper->field_surname->value(), 'wrapper->field_surname->value()');
  dpm($wrapper->field_salary->value(), 'wrapper->field_salary->value()');
  // dpm($wrapper->field_undefined->value(), 'wrapper->field_undef->value()');

  dpm($wrapper->host_entity, 'wrapper->host_entity');
  dpm($wrapper->host_entity->value(), 'wrapper->host_entity->value()');
}


/**
 * Dump entity data.
 */
function _pde_06_fci_entity_dump(FieldCollectionItemEntity $entity) {
  pde_trace_funct();

  dpm($entity, 'entity');
  // hostEntity properties are protected, these are not shown by dpm, so
  // are accessed by functions.
  dpm($entity->hostEntity(), 'entity->hostEntity()');
  dpm($entity->hostEntityBundle(), 'entity->hostEntityBundle()');
  dpm($entity->hostEntityId(), 'entity->hostEntityId()');
  dpm($entity->hostEntityId(), 'entity->hostEntityType()');
}
